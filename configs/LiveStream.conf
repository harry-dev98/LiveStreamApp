map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream websocket{
        server 0.0.0.0:9000;
}

server {
    listen 80;
    server_name conf.zedderp.com;
    client_max_body_size 10M;
    return 301 https://conf.zedderp.com$request_uri;
}


server {
    listen 443 ssl;
    ssl on;
    root /usr/share/jitsi-meet;
    ssl_certificate /etc/nginx/ssl/tlscert.crt;

    ssl_certificate_key /etc/nginx/ssl/private.key;

    server_name conf.zedderp.com;
    client_max_body_size 10M;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /root/ZeddLabz/;
    }
    location /janus {
        proxy_pass http://127.0.0.1:8088/janus;
    }
    location /webinar/ {
        include proxy_params;
        proxy_pass http://unix:/run/gunicorn.sock;
    }
    location /media/ {
        root /root/ZeddLabz/;
    }
    location /ws/ {
        proxy_pass http://websocket;
#       proxy_pass ws://websocket;
        proxy_http_version 1.1;

        proxy_read_timeout 86400;
        proxy_redirect     off;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    location /.well-known/ {
        root /root/ZeddLabz/static/;
    }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
  #  if ($scheme != "wss") {
 #       return 301 wss://$host$request_uri;
#    }

}

